{"id":1416845562,"question_id":1408,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1728467312,"status":10,"status_display":"Accepted","runtime":"33 ms","url":"/submissions/detail/1416845562/","is_pending":"Not Pending","title":"Find the Smallest Divisor Given a Threshold","memory":"25 MB","code":"class Solution {\npublic:\n    long long findResult(vector<int>& nums, int divisor) {\n        long long result = 0;\n        for(int i=0; i<nums.size(); i++) {\n            result += ceil(nums[i]/(double)divisor);\n        }\n        return result;\n    }\n\n    int smallestDivisor(vector<int>& nums, int threshold) {\n        int left=1, right=*max_element(nums.begin(), nums.end());\n        int mid = left + (right - left)/2;\n        while(left <= right) {\n            long long x = findResult(nums, mid);\n            if(x <= threshold) {\n                right = mid - 1;\n            }\n            else\n                left = mid + 1;\n            mid = left + (right - left)/2;\n        }\n        return left;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-smallest-divisor-given-a-threshold","has_notes":false,"flag_type":1}