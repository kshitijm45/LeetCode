{"id":1416242481,"question_id":540,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1728414855,"status":10,"status_display":"Accepted","runtime":"18 ms","url":"/submissions/detail/1416242481/","is_pending":"Not Pending","title":"Single Element in a Sorted Array","memory":"25 MB","code":"class Solution {\npublic:\n    int singleNonDuplicate(vector<int>& nums) {\n        int n = nums.size();\n        if(n == 1)\n            return nums[0];\n        if(nums[0] != nums[1])\n            return nums[0];\n        if(nums[n-2] != nums[n-1])\n            return nums[n-1];\n        int left = 0, right = n - 1;\n        int mid = left + (right - left)/2;\n        while(left <= right) {\n            if(nums[mid] != nums[mid-1] && nums[mid] != nums[mid+1])\n                return nums[mid];\n            else if((mid%2 != 0 && nums[mid-1] != nums[mid]) || (mid%2 == 0 && nums[mid-1] == nums[mid]))\n                right = mid - 1;\n            else\n                left = mid + 1;\n            mid = left + (right - left)/2;\n        }\n        return -1;\n    }\n};","compare_result":"1111111111111111","title_slug":"single-element-in-a-sorted-array","has_notes":false,"flag_type":1}