{"id":1420976810,"question_id":142,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1728823482,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/1420976810/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"10.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *detectCycle(ListNode *head) {\n        ListNode *slow = head;\n        ListNode *fast = head;\n        int flag = 0;\n        while(fast != NULL && fast->next != NULL) {\n            slow = slow->next;\n            fast = fast->next->next;\n            if(slow == fast) {\n                flag = 1;\n                break;\n            }\n        }\n        if(flag) {\n            fast = head;\n            while(fast != slow) {\n                fast = fast->next;\n                slow = slow->next;\n            }\n            return slow;\n        }\n        else\n            return NULL;\n    }\n};","compare_result":"111111111111111111","title_slug":"linked-list-cycle-ii","has_notes":false,"flag_type":1}