{"id":1478527499,"question_id":61,"lang":"cpp","lang_name":"C++","time":"5 days, 19 hours","timestamp":1734175954,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1478527499/","is_pending":"Not Pending","title":"Rotate List","memory":"16.3 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* rotateRight(ListNode* head, int k) {\n        if(head == NULL || head->next == NULL || k == 0)\n            return head;\n        ListNode* temp = head;\n        int len=1, i=1;\n        while(temp->next != NULL) {\n            len++;\n            temp = temp->next;\n        }\n        temp->next = head;\n        temp = head;\n        while(i < (len - (k % len))) {\n            temp = temp->next;\n            i++;\n        }\n        ListNode* newhead = temp->next;\n        temp->next = NULL;\n        return newhead;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotate-list","has_notes":false,"flag_type":1}