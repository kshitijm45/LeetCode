{"id":1481051783,"question_id":145,"lang":"cpp","lang_name":"C++","time":"2 days, 19 hours","timestamp":1734434256,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1481051783/","is_pending":"Not Pending","title":"Binary Tree Postorder Traversal","memory":"10.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void postorder(vector<int>& ans, TreeNode* root) {\n        if(root == NULL)\n            return;\n        postorder(ans, root->left);\n        postorder(ans, root->right);\n        ans.push_back(root->val);\n    }\n\n    vector<int> postorderTraversal(TreeNode* root) {\n        vector<int> ans;\n        postorder(ans, root);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-postorder-traversal","has_notes":false,"flag_type":1}