{"id":1473235924,"question_id":85,"lang":"cpp","lang_name":"C++","time":"1 week, 5 days","timestamp":1733636597,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1473235924/","is_pending":"Not Pending","title":"Maximal Rectangle","memory":"21 MB","code":"class Solution {\nprivate:\n    vector<int> nextSmallerElement(vector<int> &nums) {\n        int n = nums.size();\n        vector<int> ans(n);\n        stack<int> st;\n        for(int i=n-1; i>=0; i--) {\n            while(!st.empty() && nums[i] <= nums[st.top()])\n                st.pop();\n            ans[i] = st.empty() ? -1 : st.top();\n            st.push(i);\n        }\n        return ans;\n    }\n\n    vector<int> prevSmallerElement(vector<int> &nums) {\n        int n = nums.size();\n        vector<int> ans(n);\n        stack<int> st;\n        for(int i=0; i<n; i++) {\n            while(!st.empty() && nums[i] <= nums[st.top()])\n                st.pop();\n            ans[i] = st.empty() ? -1 : st.top();\n            st.push(i);\n        }\n        return ans;\n    }\n\n    int largestArea(vector<int> &nums) {\n        int n=nums.size();\n        vector<int> prev = prevSmallerElement(nums);\n        vector<int> next = nextSmallerElement(nums);\n        int area = 0;\n        for(int i=0; i<n; i++) {\n            int length = nums[i];\n            if(next[i] == -1)\n                next[i] = n;\n            int breadth = next[i] - prev[i] - 1;\n            area = max(area, length * breadth);\n        }\n        return area;\n    }\n\npublic:\n    int maximalRectangle(vector<vector<char>>& matrix) {\n        vector<int> row(matrix[0].size(),0);\n        int area = 0;\n        for(int i = 0; i<matrix.size(); i++) {\n            for(int j=0; j<matrix[0].size();j++) {\n                if(matrix[i][j] == '1')\n                    row[j] += 1;\n                else\n                    row[j] = 0;\n            }\n            area = max(area, largestArea(row));\n        }\n        return area;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximal-rectangle","has_notes":false,"flag_type":1}