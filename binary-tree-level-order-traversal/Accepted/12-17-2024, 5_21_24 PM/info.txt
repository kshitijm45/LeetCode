{"id":1481071396,"question_id":102,"lang":"cpp","lang_name":"C++","time":"2 days, 18 hours","timestamp":1734436284,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1481071396/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"17.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\\\n        vector<int> temp;\n        vector<vector<int>> ans;\n        if(root == NULL)\n            return ans;\n        queue<TreeNode*> q;\n\n        q.push(root);\n        q.push(NULL);\n        while(!q.empty()) {\n            TreeNode* t = q.front();\n            q.pop();\n            if(t == NULL) {\n                ans.push_back(temp);\n                temp.resize(0);\n                if(!q.empty())\n                    q.push(NULL);\n            }\n            else {\n                temp.push_back(t->val);\n                if(t->left != NULL)\n                    q.push(t->left);\n                if(t->right != NULL)\n                    q.push(t->right);\n            }\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false,"flag_type":1}