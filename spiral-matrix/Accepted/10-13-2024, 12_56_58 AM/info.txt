{"id":1420307485,"question_id":54,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1728761218,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1420307485/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"8.5 MB","code":"class Solution {\npublic:\n    vector<int> spiralOrder(vector<vector<int>>& matrix) {\n        vector<int> ans;\n        int m = matrix.size();\n        int n = matrix[0].size();\n        int top = 0;\n        int bottom = m - 1;\n        int left = 0;\n        int right = n - 1;\n        int total = m*n;\n        int count = 0;\n        while(count < total) {\n            for(int i = left; i <= right && count < total; i++) {\n                ans.push_back(matrix[top][i]);\n                count++;\n            }\n            top++;\n            for(int i = top; i <= bottom && count < total; i++) {\n                ans.push_back(matrix[i][right]);\n                count++;\n            }\n            right--;\n            for(int i = right; i >= left && count < total; i--) {\n                ans.push_back(matrix[bottom][i]);\n                count++;\n            }\n            bottom--;\n            for(int i = bottom; i >= top && count < total; i--) {\n                ans.push_back(matrix[i][left]);\n                count++;\n            }\n            left++;\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111","title_slug":"spiral-matrix","has_notes":false,"flag_type":1}