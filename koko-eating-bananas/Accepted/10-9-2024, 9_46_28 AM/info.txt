{"id":1416574753,"question_id":907,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1728447388,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/1416574753/","is_pending":"Not Pending","title":"Koko Eating Bananas","memory":"37.7 MB","code":"class Solution {\npublic:\n    long long hourscount(vector<int> piles, int k) {\n        int i = 0;\n        long long hours = 0;\n        for(int i=0;i<piles.size();i++) {\n            hours += ceil(piles[i]/ (double)k);\n        }\n        return hours;\n    }\n\n    int minEatingSpeed(vector<int>& piles, int h) {\n        int n = *max_element(piles.begin(), piles.end());\n        int left = 1, right = n;\n        int mid = left + (right - left)/2;\n        int ans = 0;\n        while(left <= right) {\n            long long hrs = hourscount(piles, mid);\n            if(hrs <= h) {\n                ans = mid;\n                right = mid - 1;\n            }\n            else\n                left = mid + 1;\n            mid = left + (right - left)/2;\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"koko-eating-bananas","has_notes":false,"flag_type":1}