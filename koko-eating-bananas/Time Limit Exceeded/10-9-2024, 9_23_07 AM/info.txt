{"id":1416555759,"question_id":907,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1728445987,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1416555759/","is_pending":"Not Pending","title":"Koko Eating Bananas","memory":"N/A","code":"class Solution {\npublic:\n    int hourscount(vector<int> piles, int k) {\n        int i = 0;\n        int hours = 0;\n        while(i < piles.size()) {\n            if(piles[i] <= k) {\n                i++;\n            }\n            else {\n                piles[i] -= k;\n            }\n            hours+=1;          \n        }\n        return hours;\n    }\n\n    int minEatingSpeed(vector<int>& piles, int h) {\n        int n = *max_element(piles.begin(), piles.end());\n        int left = 1, right = n;\n        int mid = left + (right - left)/2;\n        int ans = 0;\n        while(left <= right) {\n            int hrs = hourscount(piles, mid);\n            if(hrs <= h) {\n                ans = mid;\n                right = mid - 1;\n            }\n            else\n                left = mid + 1;\n            mid = left + (right - left)/2;\n        }\n        return ans;\n    }\n};","compare_result":"111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"koko-eating-bananas","has_notes":false,"flag_type":1}