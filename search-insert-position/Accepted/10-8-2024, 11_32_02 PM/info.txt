{"id":1416167261,"question_id":35,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1728410522,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1416167261/","is_pending":"Not Pending","title":"Search Insert Position","memory":"12.4 MB","code":"class Solution {\npublic:\n    int searchInsert(vector<int>& nums, int target) {\n        if(target < nums[0])\n            return 0;\n        int n = nums.size();\n        if(target > nums[n-1])\n            return n;\n        int left=0,right=n-1;\n        int mid = left + (right - left)/2;\n        while(left <= right) {\n            if(nums[mid] == target)\n                return mid;\n            else if(nums[mid] > target)\n                right = mid - 1;\n            else\n                left = mid + 1;\n            mid = left + (right - left)/2;\n        }\n        return left;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-insert-position","has_notes":false,"flag_type":1}