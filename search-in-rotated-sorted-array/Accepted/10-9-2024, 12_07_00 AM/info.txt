{"id":1416206675,"question_id":33,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1728412620,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1416206675/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array","memory":"13.7 MB","code":"class Solution {\npublic:\n    int pivot(vector<int>& nums) {\n        int left=0, right = nums.size()-1;\n        int mid = left + (right - left)/2;\n        while(left < right) {\n            if(nums[mid] >= nums[0])\n                left = mid + 1;\n            else\n                right = mid;\n            mid = left + (right - left)/2;\n        }\n        return left;\n    }\n\n    int search(vector<int>& nums, int target) {\n        int p = pivot(nums);\n        int left, right;\n        int n = nums.size();\n        if(target >= nums[p] && target <= nums[n-1]) {\n            left = p;\n            right = n - 1;\n        }\n        else {\n            left = 0;\n            right = p-1;\n        }\n        int mid = left + (right - left)/2;\n        while(left <= right) {\n            if(nums[mid] == target)\n                return mid;\n            else if(nums[mid] > target)\n                right = mid - 1;\n            else\n                left = mid + 1;\n            mid = left + (right - left)/2;\n        }\n        return -1;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-in-rotated-sorted-array","has_notes":false,"flag_type":1}