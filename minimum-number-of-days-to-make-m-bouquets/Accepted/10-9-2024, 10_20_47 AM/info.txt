{"id":1416604722,"question_id":1605,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1728449447,"status":10,"status_display":"Accepted","runtime":"109 ms","url":"/submissions/detail/1416604722/","is_pending":"Not Pending","title":"Minimum Number of Days to Make m Bouquets","memory":"69.1 MB","code":"class Solution {\npublic:\n    int calcBouqets(vector<int>& bloomDay, int k, int days) {\n        int curr=0, total=0;\n        for(int i=0; i<bloomDay.size(); i++) {\n            if(bloomDay[i] <= days) {\n                curr+=1;\n                if(curr == k) {\n                    total++;\n                    curr = 0;\n                }\n            }\n            else\n                curr = 0;\n        }\n        return total;\n    }\n\n    int minDays(vector<int>& bloomDay, int m, int k) {\n        int n = bloomDay.size();\n        long long val = (long long)m * k;\n        if(val > n)\n            return -1;\n        int left = 1, right = *max_element(bloomDay.begin(), bloomDay.end());\n        int mid = left + (right - left)/2;\n        int ans = 0;\n        while(left <= right) {\n            int boqs = calcBouqets(bloomDay, k, mid);\n            if(boqs >= m) {\n                ans = mid;\n                right = mid - 1;\n            }\n            else\n                left = mid + 1;\n            mid = left + (right - left)/2;\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-number-of-days-to-make-m-bouquets","has_notes":false,"flag_type":1}