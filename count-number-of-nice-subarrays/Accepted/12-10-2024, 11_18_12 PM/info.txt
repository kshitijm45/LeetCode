{"id":1475479062,"question_id":1370,"lang":"cpp","lang_name":"C++","time":"1 week, 2 days","timestamp":1733852892,"status":10,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/1475479062/","is_pending":"Not Pending","title":"Count Number of Nice Subarrays","memory":"71.6 MB","code":"class Solution {\nprivate:\n    int atMost(vector<int>& nums, int k) {\n        int nice = 0;\n        int left=0, right=0;\n        int oddcount=0;\n        while(right < nums.size()) {\n            if(nums[right] % 2 == 1)\n                oddcount++;\n            while(oddcount > k) {\n                if(nums[left] % 2 == 1)\n                    k++;\n                left++;\n            }\n            nice += right - left + 1;\n            right++;\n        }\n        return nice;\n    }\n\npublic:\n    int numberOfSubarrays(vector<int>& nums, int k) {\n        return atMost(nums, k) - atMost(nums, k-1);\n    }\n};","compare_result":"11111111111111111111111111111111111111","title_slug":"count-number-of-nice-subarrays","has_notes":false,"flag_type":1}